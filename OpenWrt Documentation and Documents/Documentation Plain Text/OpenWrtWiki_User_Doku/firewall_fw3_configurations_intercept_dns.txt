====== DNS hijacking ======
{{section>meta:infobox:howto_links#cli_skills&noheader&nofooter&noeditbutton}}

===== Introduction =====
  * This how-to describes the method for intercepting your DNS traffic on OpenWrt.
  * You can combine it with [[docs:guide-user:services:vpn:start|VPN]] or [[docs:guide-user:services:dns:start#encryption|DNS encryption]] to protect DNS traffic.

===== Goals =====
  * Override preconfigured DNS provider for LAN clients.
    * Prevent DNS leak for LAN clients when using VPN or DNS encryption.

===== Instructions =====
==== 1. Firewall ====
Configure firewall to intercept DNS traffic.

<code bash>
# Intercept DNS traffic
uci -q delete firewall.dns_int
uci set firewall.dns_int="redirect"
uci set firewall.dns_int.name="Intercept-DNS"
uci set firewall.dns_int.src="lan"
uci set firewall.dns_int.src_dport="53"
uci set firewall.dns_int.proto="tcp udp"
uci set firewall.dns_int.target="DNAT"
uci commit firewall
/etc/init.d/firewall restart
</code>

==== 2. NAT6 ====
Enable NAT6 to process IPv6 traffic when using dual-stack mode.

<code bash>
# Enable NAT6
opkg update
opkg install kmod-ipt-nat6
cat << "EOF" > /etc/firewall.nat6
iptables-save -t nat \
| sed -e "/\s[DS]NAT\s/d;/\sMASQUERADE$/d;/\s--match-set\s\S*/s//\06/" \
| ip6tables-restore -T nat
EOF
uci -q delete firewall.nat6
uci set firewall.nat6="include"
uci set firewall.nat6.path="/etc/firewall.nat6"
uci set firewall.nat6.reload="1"
uci commit firewall
/etc/init.d/firewall restart
</code>

===== Testing =====
Verify your [[wp>Public_recursive_name_server|DNS provider]] matches the one on the router when using a different DNS provider on the client.
  * [[https://dnsleaktest.com/]]

===== Troubleshooting =====
Collect and analyze the following information.

<code bash>
# Log and status
/etc/init.d/firewall restart

# Runtime configuration
iptables-save
ip6tables-save

# Persistent configuration
uci show firewall
</code>
