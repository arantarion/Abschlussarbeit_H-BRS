====== Random generator ======
{{section>meta:infobox:howto_links#cli_skills&noheader&nofooter&noeditbutton}}

===== Introduction =====
  * This how-to describes the method for setting up a fast [[wp>Random_number_generation|RNG]] on OpenWrt.
  * It may help to minimize system startup time on low performance devices.

===== Goals =====
  * Minimize startup time for cryptography-dependent services.
    * Avoid potential deadlock states and race conditions.

===== Instructions =====
Provide RNG with rng-tools.

<code bash>
# Install packages
opkg update
opkg install rng-tools

# Configure RNG
uci set system.@rngd[0].enabled="1"
uci commit system
/etc/init.d/rngd restart
</code>

===== Testing =====
Test the [[wp>Entropy_(computing)#Practical_implications|entropy]] pool size.

<code bash>
sysctl kernel.random.entropy_avail
</code>

Use [[man>rngtest]] to check the randomness of data.

<code bash>
RNG_DEV="$(uci get system.@rngd[0].device)"
rngtest -c 1000 < ${RNG_DEV}
</code>

===== Troubleshooting =====
Collect and analyze the following information.

<code bash>
# Restart services
/etc/init.d/log restart; /etc/init.d/rngd restart

# Log and status
logread -e rngd; pgrep -f -a rngd

# Persistent configuration
uci show system
</code>

===== Extras =====
==== Software RNG ====
Use a software RNG by default.

<code bash>
# Use software RNG
uci set system.@rngd[0].device="/dev/urandom"
uci commit system
/etc/init.d/rngd restart
</code>

==== Hardware RNG ====
Use a hardware RNG if available.

<code bash>
# Use hardware RNG
uci set system.@rngd[0].device="/dev/hwrng"
uci commit system
/etc/init.d/rngd restart
</code>
