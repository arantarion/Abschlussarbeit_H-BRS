====== WireGuard client ======
{{section>meta:infobox:howto_links#cli_skills&noheader&nofooter&noeditbutton}}

===== Introduction =====
  * This how-to describes the method for setting up [[wp>WireGuard|WireGuard]] client on OpenWrt.
  * Follow [[docs:guide-user:services:vpn:wireguard:server|WireGuard server]] for server setup and [[docs:guide-user:services:vpn:wireguard:extras|WireGuard extras]] for additional tuning.

===== Goals =====
{{section>docs:guide-user:services:vpn:wireguard:server#goals&noheader&nofooter&noeditbutton}}

===== Instructions =====
==== 1. Preparation ====
Install the packages and specify the VPN client configuration parameters.

<code bash>
# Install packages
opkg update
opkg install wireguard

# Configuration parameters
WG_IF="vpn"
WG_SERV="SERVER_NAME_OR_IP_ADDRESS"
WG_PORT="51820"
WG_ADDR="192.168.9.2/24"
WG_ADDR6="fdf1:7610:d152:3a9c::2/64"
</code>

==== 2. Key management ====
Generate client keys.
[[docs:guide-user:services:vpn:wireguard:start#key_management|Exchange]] the keys between the server and the client using [[docs:guide-user:troubleshooting:backup_restore|file transfer]] or copy-paste.

<code bash>
# Generate keys
umask go=
wg genkey | tee wgclient.key | wg pubkey > wgclient.pub

# Client private key
WG_KEY="$(cat wgclient.key)"

# Pre-shared key
WG_PSK="$(cat wgserver.psk)"

# Server public key
WG_PUB="$(cat wgserver.pub)"
</code>

==== 3. Firewall ====
Consider VPN network as public and assign VPN interface to WAN zone to minimize firewall setup.

<code bash>
# Configure firewall
uci rename firewall.@zone[0]="lan"
uci rename firewall.@zone[1]="wan"
uci del_list firewall.wan.network="${WG_IF}"
uci add_list firewall.wan.network="${WG_IF}"
uci commit firewall
/etc/init.d/firewall restart
</code>

==== 4. Network ====
Set up VPN interface and peers.

<code bash>
# Configure network
uci -q delete network.${WG_IF}
uci set network.${WG_IF}="interface"
uci set network.${WG_IF}.proto="wireguard"
uci set network.${WG_IF}.private_key="${WG_KEY}"
uci add_list network.${WG_IF}.addresses="${WG_ADDR}"
uci add_list network.${WG_IF}.addresses="${WG_ADDR6}"

# Add VPN peers
uci -q delete network.wgserver
uci set network.wgserver="wireguard_${WG_IF}"
uci set network.wgserver.public_key="${WG_PUB}"
uci set network.wgserver.preshared_key="${WG_PSK}"
uci set network.wgserver.endpoint_host="${WG_SERV}"
uci set network.wgserver.endpoint_port="${WG_PORT}"
uci set network.wgserver.route_allowed_ips="1"
uci set network.wgserver.persistent_keepalive="25"
uci add_list network.wgserver.allowed_ips="0.0.0.0/0"
uci add_list network.wgserver.allowed_ips="::/0"
uci commit network
/etc/init.d/network restart
</code>

Resolve [[docs:guide-user:services:vpn:wireguard:extras#race_conditions|race conditions]] and provide [[docs:guide-user:services:vpn:wireguard:extras#dynamic_connection|dynamic connection]] management if required.

===== Testing =====
{{section>docs:guide-user:services:vpn:wireguard:server#testing&noheader&nofooter&noeditbutton}}

===== Troubleshooting =====
{{section>docs:guide-user:services:vpn:wireguard:server#troubleshooting&noheader&nofooter&noeditbutton}}
