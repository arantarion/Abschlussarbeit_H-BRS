====== Guest Wi-Fi basics ======
{{section>meta:infobox:howto_links#cli_skills&noheader&nofooter&noeditbutton}}

===== Introduction =====
  * Guest Wi-Fi provides an isolated wireless network which is independent from your main WLAN.
  * Guest clients have internet connectivity and restricted LAN connectivity.
  * Follow [[docs:guide-user:network:wifi:guestwifi:extras|Guest Wi-Fi extras]] for additional tuning.

===== Goals =====
  * Create an open wireless network independent from the main WLAN.
  * Provide internet connectivity to guest clients and restrict LAN connectivity.

===== Instructions =====
==== 1. Network ====
Set up a guest network interface.

<code bash>
# Configure network
uci -q delete network.guest
uci set network.guest="interface"
uci set network.guest.type="bridge"
uci set network.guest.proto="static"
uci set network.guest.ipaddr="192.168.3.1"
uci set network.guest.netmask="255.255.255.0"
uci commit network
/etc/init.d/network restart
</code>

==== 2. Wireless ====
Set up a wireless interface bound to the guest network interface.

<code bash>
# Configure wireless
WIFI_DEV="$(uci get wireless.@wifi-iface[0].device)"
uci -q delete wireless.guest
uci set wireless.guest="wifi-iface"
uci set wireless.guest.device="${WIFI_DEV}"
uci set wireless.guest.mode="ap"
uci set wireless.guest.network="guest"
uci set wireless.guest.ssid="guest"
uci set wireless.guest.encryption="none"
uci commit wireless
wifi reload
</code>

[[docs:guide-user:network:wifi:guestwifi:extras#providing_encryption|Secure]] the guest network and [[docs:guide-user:network:wifi:guestwifi:extras#isolating_clients|isolate]] its clients if required.

==== 3. DHCP ====
Configure a DHCP pool for the guest network.

<code bash>
# Configure DHCP
uci -q delete dhcp.guest
uci set dhcp.guest="dhcp"
uci set dhcp.guest.interface="guest"
uci set dhcp.guest.start="100"
uci set dhcp.guest.limit="150"
uci set dhcp.guest.leasetime="1h"
uci commit dhcp
/etc/init.d/dnsmasq restart
</code>

==== 4. Firewall ====
Configure firewall for the guest network.
Allow to forward traffic from the guest network to WAN.
Allow DHCP requests and DNS queries.

<code bash>
# Configure firewall
uci -q delete firewall.guest
uci set firewall.guest="zone"
uci set firewall.guest.name="guest"
uci set firewall.guest.network="guest"
uci set firewall.guest.input="REJECT"
uci set firewall.guest.output="ACCEPT"
uci set firewall.guest.forward="REJECT"
uci -q delete firewall.guest_wan
uci set firewall.guest_wan="forwarding"
uci set firewall.guest_wan.src="guest"
uci set firewall.guest_wan.dest="wan"
uci -q delete firewall.guest_dns
uci set firewall.guest_dns="rule"
uci set firewall.guest_dns.name="Allow-DNS-Guest"
uci set firewall.guest_dns.src="guest"
uci set firewall.guest_dns.dest_port="53"
uci set firewall.guest_dns.proto="tcp udp"
uci set firewall.guest_dns.target="ACCEPT"
uci -q delete firewall.guest_dhcp
uci set firewall.guest_dhcp="rule"
uci set firewall.guest_dhcp.name="Allow-DHCP-Guest"
uci set firewall.guest_dhcp.src="guest"
uci set firewall.guest_dhcp.dest_port="67"
uci set firewall.guest_dhcp.family="ipv4"
uci set firewall.guest_dhcp.proto="udp"
uci set firewall.guest_dhcp.target="ACCEPT"
uci commit firewall
/etc/init.d/firewall restart
</code>

===== Testing =====
Connect to the guest network.
Check your internet connectivity.
  * https://ipleak.net/

Use [[man>ping]], [[man>ping6]] or [[man>nmap]] to verify your firewall configuration.

===== Troubleshooting =====
Collect and analyze the following information.

<code bash>
# Restart services
/etc/init.d/log restart; /etc/init.d/network restart
/etc/init.d/dnsmasq restart; /etc/init.d/firewall restart

# Log and status
logread; netstat -l -n -p | grep -e dnsmasq

# Runtime configuration
pgrep -f -a dnsmasq
ip address show; ip route show table all
ip rule show; ip -6 rule show; iptables-save; ip6tables-save

# Persistent configuration
uci show network; uci show wireless; uci show dhcp; uci show firewall
</code>
