====== Networking Benchmarks ======

===== Throughput =====
  * Diverse websites already do test the throughput of diverse hardware and switches and operating systems, e.g. [[https://www.smallnetbuilder.com/]] 
(However such guides only apply for hardware running the factory firmware, once openwrt or any third-party firmware is installed, the network capabilities will switch to the network stack in openwrt or any third-party firmware used)

===== Latency =====
  * Latency (i.e. the time delay between two interactions) is often not measured at all, or they neglect to measure latency under load. Exactly this has been addressed by the project [[https://www.bufferbloat.net/]]
    * The project bufferbloat utilizes OpenWrt for measurements and experiments: [[https://www.bufferbloat.net/projects/cerowrt]]

===== Tools =====
  * [[wp>Iperf]], [[http://code.google.com/p/xjperf/â€Ž|JPerf (Graphical Iperf)]], [[wp>Netperf]]
  * [[docs:guide-user:network:traffic-shaping:sch_netem|Netem (Network Emulator)]]
  * see [[docs:guide-user:network:wifi:wireless.overview]] for diverse tools available in the OpenWrt package respos; (security is a again different field then benchmarking throughput and latency if you are bored)
  * puppet, etc etc
  * ''[[wp>top (software)|top]]''
    * In I noticed //"sirq"// consuming 99% of the CPU (e.g. [[https://dev.openwrt.org/ticket/7356|Ticket 7356]])
    * //ksoftirqd// is the kernel thread responsible for servicing software IRQs which is the context in which Ethernet frames are processe for the RX path, what this means here is:
    - you are CPU bound; the hardware might be moving packet faster but software cannot keep up
    - the NAPI implementation (if existing in the driver) might need some tweaking, in particular I see no likely(__napi_schedule_prep) for instance