====== VPNC client ======
VPN client vpnc compatible with Cisco's EasyVPN equipment.
For configuration see current [[https://github.com/openwrt/packages/blob/master/net/vpnc/README|README]]

===== VPNC for older firmware versions =====
| :!: **NOTE: The information on this page is obsolete. Beginning with Chaos Calmer, vpnc is configured via UCI. See the README in the vpnc package directory.** |

| For an overview over all existing Virtual private network (VPN)-related articles in the OpenWrt wiki, please visit [[docs:guide-user:services:vpn:overview]] |

[[man>vpnc]]

<code bash>
opkg update
opkg install vpnc
</code>

<code bash>
cat << "EOF" > /etc/vpnc/default.conf
IPSec gateway 188.40.166.25
IPSec ID munky
IPSec secret correcthorsebatterystaple
Xauth username munky
Xauth passwordcorrecthorsebatterystaple
EOF
</code>

This provides the router with access to the vpn but nothing on your LAN will access the vpn resources.
So we need post-connect rules.

<code bash>
cat << "EOF" > /etc/vpnc/post-connect.d/masquerade
iptables -A forwarding_rule -o tun0 -j ACCEPT
iptables -A forwarding_rule -i tun0 -j ACCEPT
iptables -t nat -A postrouting_rule -o tun0 -j MASQUERADE
EOF
</code>

Now when you run the command 'vpnc' it should connect the vpn and your LAN will be able to connect as well now.
Next we want to autoconnect when you boot the router.

<code bash>
mkdir /etc/config/vpnc
cd /etc/config/vpnc
cat << "EOF" > /etc/config/vpnc/startup-script
#!/bin/sh /etc/rc.common
START = 75
STOP = 01 

start () {
    vpnc
}
  
stop () {
    vpnc-disconnect
}
EOF
</code>

This script should be symlinked to /etc/init.d but for some reason the symlink cannot be enabled.

<code bash>
cp /etc/config/vpnc/startup-script /etc/init.d/vpnc
/etc/init.d/vpnc enable
</code>

The remaining problem is detecting when the vpn disconnects.
Note 10.10.10.1 in this script.
You should change this to an ip address on the vpn.

<code bash>
cat << "EOF" > /etc/config/vpnc/keep-alive
#!/bin/sh
if ping -q -c 1 10.10.10.1 2>&1 > /dev/null
then
    echo itworks > /dev/null
else
    /etc/init.d/vpnc stop
    sleep 50
    /etc/init.d/vpnc start
fi
EOF
</code>

The final action needed is to created the scheduled task.
The following runs this every 15 minutes.

<code bash>
crontab -e
*/15 * * * * /etc/config/vpnc/keep-alive
</code>
